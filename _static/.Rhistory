for (m in 1:38) {
w = (2/3)*(m) + (2/5)*(38-m)
print(paste(m, w))
}
12*24
24/6
14*8
8*14 + 16*12
53/4
52/4
(1/11)*(1/10)
6/63
6/7 + 1/9
1/63
1/7 + 1/9
12*(15/60) + 24*(30/60) + 8*(15/60)
6/63
209 - (120*1.05 + 10)
73/120
(210 - (120*1.05 + 10))/120
(212 - (120*1.05 + 10))/120
(213 - (120*1.05 + 10))/120
(214 - (120*1.05 + 10))/120
for (m in 1:38) {
w = (2/3)*(m) + (2/5)*(38-m)
print(paste(m, w))
}
for (match in 1:38) {
win = (2/3)*(m) + (2/5)*(38-m)
print(paste("match", match, "win", w))
}
for (match in 1:38) {
win = (2/3)*(match) + (2/5)*(38-match)
print(paste("match", match, "win", w))
}
for (match in 1:38) {
win = (2/3)*(match) + (2/5)*(38-match)
print(paste("match", match, "win", win))
}
120/5
15*5
80/5
240/5
0.2*0.2
40*5
45*5
200/60
220/60
40*5
35*5
tc = 120*1.05 + 10
profit = 214 - tc
percent = profit/tcd
tc = 120*1.05 + 10
profit = 214 - tc
percent = profit/tc
tc = 120*1.05 + 10
profit = 214 - tc
percent = profit/tc
120*1.05
214 - 136
78/136
tc = 120*1.05 + 10
profit = 214 - tc
percent = profit/tc
for (i in 180:240) {
profit = i - 136
percent = profit/136
print(paste(i, "percent:", percent))
}
tc = 120*1.05 + 10
profit = 238 - tc
percent = profit/tc
1/9 + 6/7
8/9 *6/7
1/7
3/5
0.6*60
30*5
8/9
(8/9)*(6/7)
(1/9)*(6/7)
40*5
45*5
12*(15/60) + 24*(30/60) + 8(15/60)
12*(15/60) + 24*(30/60) + 8*(15/60)
# 1.2
(10/50)*(9/49)
8/0.25
7/0.5
8*0.25
7*0.5
8*0.25 < 7*0.5
8*0.25 < 7*0.5 < 100
8*0.25 < 4*2 # r v e
8*0.25 < 9*1 # r v e
# 1.4
(33*(2/3)) + (5*(2/5))
33/3
# 1.4
(33*(2/3)) + (5*(2/5))
(1/2)(6/10)
# 1.5
(1/2)*(6/10) + 4/10 > 4/5
# 1.5
(1/2)*(6/10) + 4/10 >= 4/5
(1/2)*(6/10) + 4/10
(1/2)*(6/10) + 4/10
# 1.5
(1/2)*(6/10) + 4/10 > 3/5
# 1.5
(1/2)*(4/10) + 6/10 > 4/5
(1/2)*(4/10) + 6/10
# 1.5
(1/2)*(4/10) + 6/10 >= 4/5
45*4
45*5
238 - (10 + (120*1.05)))
238 - (10 + (120*1.05))
10 + (120*1.05)
102/136
# 2.1
(238 - (10 + (120*1.05)))/(10 + (120*1.05))
# 2.2
round((1/9)*(6/7), 2)
# 2.2
round((1/9)*(6/7), 3)
# 2.3
(16/2)/24
# 2.5
(1/10)*(3/4) + (4/5)*(1/4) >= 1/5
(1/10)*(3/4) + (4/5)*(1/4)
(1/10)*(4/5) + (4/5)*(1/5)
8/40
2/5
(2/10)*(3/4)
6/40
10/40
(1/5)*(3/4) + (4/5)*(1/4)
18*3
5/75
(1/15)*(3/5) + (9/10)*(2/5)
# 2.5
(1/15)*(3/5) + (9/10)*(2/5) == 2/5
(4/5)*(1/4)
(9/10)*(1/4)
0.4 - 0.225
0.175*4
0.7/3
(7/10)*(1/4)
(3/5)*(1/10)
(4/5)*(1/10)
1.2/9
prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes == 3/10
prob_neymar_passes = 1/5
prob_neymar_scores = 1/8
prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes
prob_neymar_passes = 1/5
prob_neymar_scores = 1/8
prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes == 3/10
prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes
3/10
prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes == 3/10
(prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes) == 3/10
(prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes)
3/10
0.3 = 3/10
0.3 == 3/10
(prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes)
(prob_neymar_scores*(1 - prob_neymar_passes) + prob_neymar_passes)
3/10
40*5
45*5
180/5
200/5
200/5
0.63*49
31/49
prop.test(32, 49, 0.5)
#=============================
#  GenNet - Generate referrer_component_df
#=============================
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Experimental Administration/")
# load male performers database
df_m <- read.csv("performer, male, 7 april 1914.csv")
df_m <- df_m[df_m$performer_intro.1.player.ProlificID != "ofoghlul",]
df_m <- df_m[df_m$participant._current_app_name == "performer_debrief",]
# load female performers database
df_f <- read.csv("performer, female, 7 april 1716.csv")
df_f <- df_f[df_f$performer_intro.1.player.ProlificID != "ofoghlul",]
df_f <- df_f[df_f$participant._current_app_name == "performer_debrief",]
# merge with demographics
df_demo_f <- read.csv("performer female, 7 april, demographics.csv")
df_demo_m <- read.csv("performer male, 7 april, demographics.csv")
names(df_demo_f)[2] <- "participant.label"
names(df_demo_m)[2] <- "participant.label"
df_f <- merge(df_f, df_demo_f, by = "participant.label")
df_m <- merge(df_m, df_demo_m, by = "participant.label")
# childcare and maths score variables
df_m$maths_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 1]
# clean data
names(df_m)[3] <- "performer_participant_code"
names(df_m)[172] <- "performer_name"
names(df_m)[182] <- "performer_age"
names(df_f)[3] <- "performer_participant_code"
names(df_f)[172] <- "performer_name"
names(df_f)[182] <- "performer_age"
# split dfs
childcare_df_m <- df_m[c("performer_participant_code", "performer_name", "performer_age", "childcare_score_rd1", "childcare_score_rd2")]
maths_df_m <- df_m[c("performer_participant_code", "performer_name", "performer_age", "maths_score_rd1", "maths_score_rd2")]
childcare_df_f <- df_f[c("performer_participant_code", "performer_name", "performer_age", "childcare_score_rd1", "childcare_score_rd2")]
maths_df_f <- df_f[c("performer_participant_code", "performer_name", "performer_age", "maths_score_rd1", "maths_score_rd2")]
names(childcare_df_f)[4] <- "performer_score_rd1"
names(childcare_df_m)[4] <- "performer_score_rd1"
names(childcare_df_f)[5] <- "performer_score_rd2"
names(childcare_df_m)[5] <- "performer_score_rd2"
names(maths_df_f)[4] <- "performer_score_rd1"
names(maths_df_m)[4] <- "performer_score_rd1"
names(maths_df_f)[5] <- "performer_score_rd2"
names(maths_df_m)[5] <- "performer_score_rd2"
initial_list <- c("A.", "B.", "C.", "D.", "E.", "F.", "G.", "H.", "J.", "K.", "L.", "M.",
"N", "O", "P", "R.", "S.", "T.", "V.", "W.", "Y.")
#=============================
#  GenNet - Generate referrer_component_df
#=============================
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Experimental Administration/")
# load male performers database
df_m <- read.csv("performer, male, 7 april 1914.csv")
df_m <- df_m[df_m$performer_intro.1.player.ProlificID != "ofoghlul",]
df_m <- df_m[df_m$participant._current_app_name == "performer_debrief",]
# load female performers database
df_f <- read.csv("performer, female, 7 april 1716.csv")
df_f <- df_f[df_f$performer_intro.1.player.ProlificID != "ofoghlul",]
df_f <- df_f[df_f$participant._current_app_name == "performer_debrief",]
# merge with demographics
df_demo_f <- read.csv("performer female, 7 april, demographics.csv")
df_demo_m <- read.csv("performer male, 7 april, demographics.csv")
names(df_demo_f)[2] <- "participant.label"
names(df_demo_m)[2] <- "participant.label"
df_f <- merge(df_f, df_demo_f, by = "participant.label")
df_m <- merge(df_m, df_demo_m, by = "participant.label")
# childcare and maths score variables
df_m$maths_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 1]
# clean data
names(df_m)[3] <- "performer_participant_code"
names(df_m)[172] <- "performer_name"
names(df_m)[182] <- "performer_age"
names(df_f)[3] <- "performer_participant_code"
names(df_f)[172] <- "performer_name"
names(df_f)[182] <- "performer_age"
# Add initials
initial_list <- c("A.", "B.", "C.", "D.", "E.", "F.", "G.", "H.", "J.", "K.", "L.", "M.",
"N", "O", "P", "R.", "S.", "T.", "V.", "W.", "Y.")
df_m$performer_name = df_m$performer_name + sample(initial_list, replace = T)
df_m$performer_name = paste(df_m$performer_name + sample(initial_list, replace = T))
df_m$performer_name = paste(df_m$performer_name, sample(initial_list, replace = T))
df_m$performer_name
#=============================
#  GenNet - Generate referrer_component_df
#=============================
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Experimental Administration/")
# load male performers database
df_m <- read.csv("performer, male, 7 april 1914.csv")
df_m <- df_m[df_m$performer_intro.1.player.ProlificID != "ofoghlul",]
df_m <- df_m[df_m$participant._current_app_name == "performer_debrief",]
# load female performers database
df_f <- read.csv("performer, female, 7 april 1716.csv")
df_f <- df_f[df_f$performer_intro.1.player.ProlificID != "ofoghlul",]
df_f <- df_f[df_f$participant._current_app_name == "performer_debrief",]
# merge with demographics
df_demo_f <- read.csv("performer female, 7 april, demographics.csv")
df_demo_m <- read.csv("performer male, 7 april, demographics.csv")
names(df_demo_f)[2] <- "participant.label"
names(df_demo_m)[2] <- "participant.label"
df_f <- merge(df_f, df_demo_f, by = "participant.label")
df_m <- merge(df_m, df_demo_m, by = "participant.label")
# childcare and maths score variables
df_m$maths_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 1]
# clean data
names(df_m)[3] <- "performer_participant_code"
names(df_m)[172] <- "performer_name"
names(df_m)[182] <- "performer_age"
names(df_f)[3] <- "performer_participant_code"
names(df_f)[172] <- "performer_name"
names(df_f)[182] <- "performer_age"
# Add initials
initial_list <- c("A.", "B.", "C.", "D.", "E.", "F.", "G.", "H.", "J.", "K.", "L.", "M.",
"N", "O", "P", "R.", "S.", "T.", "V.", "W.", "Y.")
df_m[order(df$performer_name), ]
df$performer_name
df_m[order(df$performer_name),]
order(df$performer_name)
order(df$performer_name)
df$performer_name
#=============================
#  GenNet - Generate referrer_component_df
#=============================
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Experimental Administration/")
# load male performers database
df_m <- read.csv("performer, male, 7 april 1914.csv")
df_m <- df_m[df_m$performer_intro.1.player.ProlificID != "ofoghlul",]
df_m <- df_m[df_m$participant._current_app_name == "performer_debrief",]
# load female performers database
df_f <- read.csv("performer, female, 7 april 1716.csv")
df_f <- df_f[df_f$performer_intro.1.player.ProlificID != "ofoghlul",]
df_f <- df_f[df_f$participant._current_app_name == "performer_debrief",]
# merge with demographics
df_demo_f <- read.csv("performer female, 7 april, demographics.csv")
df_demo_m <- read.csv("performer male, 7 april, demographics.csv")
names(df_demo_f)[2] <- "participant.label"
names(df_demo_m)[2] <- "participant.label"
df_f <- merge(df_f, df_demo_f, by = "participant.label")
df_m <- merge(df_m, df_demo_m, by = "participant.label")
# childcare and maths score variables
df_m$maths_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 1]
# clean data
names(df_m)[3] <- "performer_participant_code"
names(df_m)[172] <- "performer_name"
names(df_m)[182] <- "performer_age"
names(df_f)[3] <- "performer_participant_code"
names(df_f)[172] <- "performer_name"
names(df_f)[182] <- "performer_age"
df$performer_name
df_m$performer_name
df_m[order(df_m$performer_name),]
df_m <- df_m[order(df_m$performer_name),]
df_m$performer_name
df_m$performer_name <- paste(df_m$performer_name, sample(initial_list, replace = T))
df_m$performer_name
#=============================
#  GenNet - Generate referrer_component_df
#=============================
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Experimental Administration/")
# load male performers database
df_m <- read.csv("performer, male, 7 april 1914.csv")
df_m <- df_m[df_m$performer_intro.1.player.ProlificID != "ofoghlul",]
df_m <- df_m[df_m$participant._current_app_name == "performer_debrief",]
# load female performers database
df_f <- read.csv("performer, female, 7 april 1716.csv")
df_f <- df_f[df_f$performer_intro.1.player.ProlificID != "ofoghlul",]
df_f <- df_f[df_f$participant._current_app_name == "performer_debrief",]
# merge with demographics
df_demo_f <- read.csv("performer female, 7 april, demographics.csv")
df_demo_m <- read.csv("performer male, 7 april, demographics.csv")
names(df_demo_f)[2] <- "participant.label"
names(df_demo_m)[2] <- "participant.label"
df_f <- merge(df_f, df_demo_f, by = "participant.label")
df_m <- merge(df_m, df_demo_m, by = "participant.label")
# childcare and maths score variables
df_m$maths_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 1]
# clean data
names(df_m)[3] <- "performer_participant_code"
names(df_m)[172] <- "performer_name"
names(df_m)[182] <- "performer_age"
names(df_f)[3] <- "performer_participant_code"
names(df_f)[172] <- "performer_name"
names(df_f)[182] <- "performer_age"
# Add initials
initial_list <- c("A.", "B.", "C.", "D.", "E.", "F.", "G.", "H.", "J.", "K.", "L.", "M.",
"N.", "O", "P", "R.", "S.", "T.", "V.", "W.", "Y.")
df_m <- df_m[order(df_m$performer_name),]
df_m$performer_name <- paste(df_m$performer_name, sample(initial_list, replace = T))
df_m$performer_name
#=============================
#  GenNet - Generate referrer_component_df
#=============================
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Experimental Administration/")
# load male performers database
df_m <- read.csv("performer, male, 7 april 1914.csv")
df_m <- df_m[df_m$performer_intro.1.player.ProlificID != "ofoghlul",]
df_m <- df_m[df_m$participant._current_app_name == "performer_debrief",]
# load female performers database
df_f <- read.csv("performer, female, 7 april 1716.csv")
df_f <- df_f[df_f$performer_intro.1.player.ProlificID != "ofoghlul",]
df_f <- df_f[df_f$participant._current_app_name == "performer_debrief",]
# merge with demographics
df_demo_f <- read.csv("performer female, 7 april, demographics.csv")
df_demo_m <- read.csv("performer male, 7 april, demographics.csv")
names(df_demo_f)[2] <- "participant.label"
names(df_demo_m)[2] <- "participant.label"
df_f <- merge(df_f, df_demo_f, by = "participant.label")
df_m <- merge(df_m, df_demo_m, by = "participant.label")
# childcare and maths score variables
df_m$maths_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$maths_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 2] <- df_m$performer_task.1.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd1[df_m$participant.performer_task_order == 1] <- df_m$performer_task.3.player.correct_answers[df_m$participant.performer_task_order == 1]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 2] <- df_m$performer_task.2.player.correct_answers[df_m$participant.performer_task_order == 2]
df_m$childcare_score_rd2[df_m$participant.performer_task_order == 1] <- df_m$performer_task.4.player.correct_answers[df_m$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$maths_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 2] <- df_f$performer_task.1.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd1[df_f$participant.performer_task_order == 1] <- df_f$performer_task.3.player.correct_answers[df_f$participant.performer_task_order == 1]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 2] <- df_f$performer_task.2.player.correct_answers[df_f$participant.performer_task_order == 2]
df_f$childcare_score_rd2[df_f$participant.performer_task_order == 1] <- df_f$performer_task.4.player.correct_answers[df_f$participant.performer_task_order == 1]
# clean data
names(df_m)[3] <- "performer_participant_code"
names(df_m)[172] <- "performer_name"
names(df_m)[182] <- "performer_age"
names(df_f)[3] <- "performer_participant_code"
names(df_f)[172] <- "performer_name"
names(df_f)[182] <- "performer_age"
# Add initials
initial_list <- c("A.", "B.", "C.", "D.", "E.", "F.", "G.", "H.", "J.", "K.", "L.", "M.",
"N.", "O", "P", "R.", "S.", "T.", "V.", "W.", "Y.")
df_m <- df_m[order(df_m$performer_name),]
df_m$performer_name <- paste(df_m$performer_name, sample(initial_list, replace = T))
df_m$performer_name
df_m$performer_name[48] <- "Thomas R."
df_m$performer_name[49] <- "Thomas M."
df_m$performer_name
df_f <- df_f[order(df_f$performer_name),]
df_f$performer_name <- paste(df_f$performer_name, sample(initial_list, replace = T))
df_f$performer_name
# split dfs
childcare_df_m <- df_m[c("performer_participant_code", "performer_name", "performer_age", "childcare_score_rd1", "childcare_score_rd2")]
maths_df_m <- df_m[c("performer_participant_code", "performer_name", "performer_age", "maths_score_rd1", "maths_score_rd2")]
childcare_df_f <- df_f[c("performer_participant_code", "performer_name", "performer_age", "childcare_score_rd1", "childcare_score_rd2")]
maths_df_f <- df_f[c("performer_participant_code", "performer_name", "performer_age", "maths_score_rd1", "maths_score_rd2")]
names(childcare_df_f)[4] <- "performer_score_rd1"
names(childcare_df_m)[4] <- "performer_score_rd1"
names(childcare_df_f)[5] <- "performer_score_rd2"
names(childcare_df_m)[5] <- "performer_score_rd2"
names(maths_df_f)[4] <- "performer_score_rd1"
names(maths_df_m)[4] <- "performer_score_rd1"
names(maths_df_f)[5] <- "performer_score_rd2"
names(maths_df_m)[5] <- "performer_score_rd2"
# write to application
setwd("C:/Users/William/Dropbox/PhD/Gendered Networks/Applications/all_components/_static")
write.csv(maths_df_f,"performer_df_maths_f.csv", row.names=F)
write.csv(childcare_df_f,"performer_df_childcare_f.csv", row.names=F)
write.csv(maths_df_m,"performer_df_maths_m.csv", row.names=F)
write.csv(childcare_df_m,"performer_df_childcare_m.csv", row.names=F)
